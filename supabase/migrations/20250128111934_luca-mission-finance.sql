create type "public"."base_tarifaire_type" as enum ('TJM', 'Prix Mensuel', 'Brut Mensuel');

create type "public"."xpert_status_type" as enum ('Entreprise', 'CDI de mission');

create table "public"."mission_finance" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "mission_id" bigint not null,
    "xpert_status" xpert_status_type,
    "base_tarifaire" base_tarifaire_type,
    "daily_rate" numeric(10,2),
    "monthly_rate" numeric(10,2),
    "days_worked" integer,
    "months_worked" numeric(4,2),
    "gd_rate" numeric(10,2),
    "annex_costs" numeric(10,2),
    "margin" numeric(5,2)
);

alter table "public"."mission" add column "statut_xpert" text;

CREATE INDEX idx_mission_finance_mission_id ON public.mission_finance USING btree (mission_id);

CREATE UNIQUE INDEX mission_finance_pkey ON public.mission_finance USING btree (id);

alter table "public"."mission_finance" add constraint "mission_finance_pkey" PRIMARY KEY using index "mission_finance_pkey";

alter table "public"."mission" add constraint "mission_statut_xpert_check" CHECK ((statut_xpert = ANY (ARRAY['CDI de mission'::text, 'Entreprise'::text]))) not valid;

alter table "public"."mission" validate constraint "mission_statut_xpert_check";

alter table "public"."mission_finance" add constraint "mission_finance_mission_fkey" FOREIGN KEY (mission_id) REFERENCES mission(id) ON DELETE CASCADE not valid;

alter table "public"."mission_finance" validate constraint "mission_finance_mission_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.insert_mission_finance()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
  -- Insérer une nouvelle ligne dans mission_finance avec l'ID de la nouvelle mission
  INSERT INTO mission_finance (mission_id)
  VALUES (NEW.id);

  -- Retourner le résultat du trigger
  RETURN NEW;
END;
$function$
;

grant delete on table "public"."mission_finance" to "anon";

grant insert on table "public"."mission_finance" to "anon";

grant references on table "public"."mission_finance" to "anon";

grant select on table "public"."mission_finance" to "anon";

grant trigger on table "public"."mission_finance" to "anon";

grant truncate on table "public"."mission_finance" to "anon";

grant update on table "public"."mission_finance" to "anon";

grant delete on table "public"."mission_finance" to "authenticated";

grant insert on table "public"."mission_finance" to "authenticated";

grant references on table "public"."mission_finance" to "authenticated";

grant select on table "public"."mission_finance" to "authenticated";

grant trigger on table "public"."mission_finance" to "authenticated";

grant truncate on table "public"."mission_finance" to "authenticated";

grant update on table "public"."mission_finance" to "authenticated";

grant delete on table "public"."mission_finance" to "service_role";

grant insert on table "public"."mission_finance" to "service_role";

grant references on table "public"."mission_finance" to "service_role";

grant select on table "public"."mission_finance" to "service_role";

grant trigger on table "public"."mission_finance" to "service_role";

grant truncate on table "public"."mission_finance" to "service_role";

grant update on table "public"."mission_finance" to "service_role";

CREATE TRIGGER trigger_insert_mission_finance AFTER INSERT ON public.mission FOR EACH ROW EXECUTE FUNCTION insert_mission_finance();


